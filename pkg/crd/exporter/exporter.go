package exporter

import (
	"bufio"
	"encoding/json"
	"log"
	"os"
	"path/filepath"

	"github.com/ghodss/yaml"
	apiextensions "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1"
)

// Exporter exports the yaml config to file.
type Exporter struct {
	writer *bufio.Writer
}

func New() *Exporter {
	return &Exporter{}
}

// Export exports the yaml config to file.
func (e *Exporter) Export(final *apiextensions.CustomResourceDefinition, outputDir string, filename string) {
	file, err := filepath.Abs(filepath.Join(outputDir, filename))
	if err != nil {
		log.Fatalf("Failed to open the output file %s: %v", file, err)
	}

	f, err := os.Create(file)
	if err != nil {
		log.Fatalf("Failed to open the output file %s: %v", file, err)
	}
	e.writer = bufio.NewWriter(f)
	e.writer.WriteString("# The code is generated by crd-validation\n\n")
	e.marshallCrd(final, "yaml")
	e.writer.Flush()
}

func (e Exporter) marshallCrd(crd *apiextensions.CustomResourceDefinition, outputFormat string) {
	jsonBytes, err := json.MarshalIndent(crd, "", "    ")
	if err != nil {
		log.Fatal("error:", err)
	}

	if outputFormat == "json" {
		e.writer.Write(jsonBytes)
	} else {
		yamlBytes, err := yaml.JSONToYAML(jsonBytes)
		if err != nil {
			log.Fatal("error:", err)
		}
		e.writer.WriteString("---\n")
		e.writer.Write(yamlBytes)
	}
}
